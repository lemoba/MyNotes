(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{438:function(_,v,t){_.exports=t.p+"assets/img/image-20220323191709842.625b6f16.png"},485:function(_,v,t){"use strict";t.r(v);var s=t(11),o=Object(s.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"运输层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运输层"}},[_._v("#")]),_._v(" 运输层")]),_._v(" "),s("ul",[s("li",[_._v("实际上在计算机网络中进行通信的真正实体是位于通信两端主机中的进程。")]),_._v(" "),s("li",[_._v("运输中主要解决的问题是：如果为运行在不同主机上的应用进程提供直接的通信服务，运输层协议又称为端到端协议。")])]),_._v(" "),s("h2",{attrs:{id:"_1-复用和分用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-复用和分用"}},[_._v("#")]),_._v(" 1. 复用和分用")]),_._v(" "),s("ul",[s("li",[s("p",[_._v("使用端口号，来区别不同应用层的不同应用进程。")]),_._v(" "),s("ul",[s("li",[_._v("端口号使用16比特表示，取值范围0~65535；\n"),s("ul",[s("li",[_._v("熟知端口：0~1023，IAMA将这个端口指派给TCP/IP协议体系中最重要的一些应用协议，例如：FTP(21/20), HTTP(80), DNS(53)")]),_._v(" "),s("li",[_._v("登记端口：1024~49151")]),_._v(" "),s("li",[_._v("短暂端口：49152~65535")])])]),_._v(" "),s("li",[s("strong",[_._v("端口号只具有本地意义,"),s("strong",[_._v("即端口号只是为了")]),_._v("标识本计算机应用层中的各进程")])])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("复用")])]),_._v(" "),s("ul",[s("li",[_._v("在运输层使用UDP协议进行封装，称为"),s("strong",[_._v("UDP复用")])]),_._v(" "),s("li",[_._v("在运输层使用TCP协议进行封装，称为"),s("strong",[_._v("TCP复用")])]),_._v(" "),s("li",[_._v("在网络层使用IP协议进行封装，称为"),s("strong",[_._v("IP复用")])]),_._v(" "),s("li",[_._v("IP数据报协议字段=17为UDP，协议字段=6为TCP")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311115811395.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311115848428.png"}})])]),_._v(" "),s("h2",{attrs:{id:"_2-tcp和udp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp和udp"}},[_._v("#")]),_._v(" 2. TCP和UDP")]),_._v(" "),s("ul",[s("li",[s("strong",[_._v("TCP")]),_._v(" "),s("ul",[s("li",[_._v("面向连接的")]),_._v(" "),s("li",[_._v("提供可靠传输，使用流量控制和拥塞控制")]),_._v(" "),s("li",[_._v("仅支持单播")]),_._v(" "),s("li",[_._v("面向字节流")]),_._v(" "),s("li",[_._v("首部最小20字节，最大60字节")]),_._v(" "),s("li",[_._v("适用于文件传输等对可靠性要求较高的服务")])])]),_._v(" "),s("li",[s("strong",[_._v("UDP")]),_._v(" "),s("ul",[s("li",[_._v("面向无连接")]),_._v(" "),s("li",[_._v("尽最大努力交付，也就是不可靠，不使用流量控制和拥塞控制")]),_._v(" "),s("li",[_._v("支持单播、多播、广播")]),_._v(" "),s("li",[_._v("面向应用报文(UDP对应用进程交付下来的报文既不合并也不拆分，而是保留这些报文边界)")]),_._v(" "),s("li",[_._v("首部开销小，仅8个字节")]),_._v(" "),s("li",[_._v("适用于IP电话、视频会议等实时应用")])])])]),_._v(" "),s("h3",{attrs:{id:"_2-1-tcp报文段首部格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-tcp报文段首部格式"}},[_._v("#")]),_._v(" 2.1 TCP报文段首部格式")]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220323193821896.png"}}),_._v(" "),s("ul",[s("li",[s("p",[s("strong",[_._v("源端口")]),_._v("：占2字节，用来"),s("strong",[_._v("标识发送该TCP报文段的应用进程")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("目的端口")]),_._v("：占2字节，用来"),s("strong",[_._v("标识接受该TCP报文段的应用进程")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("序号(Squense Number, SN)：")]),_._v(" 占4字节，取值范围[0, 2^32-1]，序号增加到最后一个后，下一个序号又回到0。 (在一个TCP连接中传送的字节流中的每一个字节都按顺序编号) "),s("strong",[_._v("指出本TCP报文段数据载荷的第一个字节的序号")])]),_._v(" "),s("blockquote",[s("p",[_._v("例如：若一个tcp报文段的**序号(SN)**为200，长度为100，**确认号(ack)**为300。表示该报文中的第一个字节的序号为200，200~299共100个数据都已经正确接收，期望接受序号为300的数据。")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("确认号ack")]),_._v("：占4字节，取值范围[0, 2^32-1]，序号增加到最后一个后，下一个序号又回到0。"),s("strong",[_._v("指出期望收到对方下一个TCP报文段的数据载荷的第一个字节的序号，同时也是对之前收到的所有数据的确认")])]),_._v(" "),s("blockquote",[s("p",[_._v("若确认号=n，则表明序号n-1为止的所有数据都已正确接收，期望接收序号为n的数据")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("确认标志位ACK")]),_._v("：取值为1时的确认号字段才有效；取值为0时确认号字段无效")]),_._v(" "),s("blockquote",[s("p",[_._v("TCP规定，在连接建立后所有传送的TCP报文段都必须把ACK置1")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("同步标志位SYN")]),_._v("：在TCP连接建立时用来同步序号")]),_._v(" "),s("blockquote",[s("p",[_._v("SYN=1表示这是一个TCP连接请求报文段")]),_._v(" "),s("p",[_._v("SYN=1 ACK=1 表明这是一个TCP连接请求的确认报文段")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("终止标志位FIN")]),_._v("：用来释放TCP连接。")]),_._v(" "),s("blockquote",[s("p",[_._v("当 FIN=1时，表明此报文段的发送发的数据已发送完毕，并要求释放运输连接")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("复位标志位RST")]),_._v("：用来复位TCP连接")]),_._v(" "),s("blockquote",[s("p",[_._v("当RST=1时，表明TCP连接出现了异常，必须释放连接，然后再重新建立连接")]),_._v(" "),s("p",[_._v("RST置1还用来拒绝一个非法的报文段或拒绝打开一个TCP连接")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("推送标志位PSH："),s("strong",[_._v("接收方的TCP收到该标志位为1的报文会")]),_._v("尽快上交应用进程")]),_._v("，而不必等到接受缓存都填满后再向上交付")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("紧急标志位URG和紧急指针")]),_._v("：用来进行紧急操作")]),_._v(" "),s("blockquote",[s("p",[s("em",[_._v("当发送方有紧急数据时，可将紧急数据插队到发送缓存的最前面，并立即封装到一个TCP报文段中进行发送。紧急指针会指出本报文段数据载荷部分包含了多长的紧急数据，紧急数据之后是普通数据")])])]),_._v(" "),s("ul",[s("li",[_._v("紧急标志位URG：取值为1是紧急指针字段有效；取值为0时紧急指针字段无效")]),_._v(" "),s("li",[_._v("紧急指针字段：占16比特，以字节为单位，用来指明紧急数据的长度")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("数据偏移")]),_._v("：占4比特，并以4字节为单位。"),s("strong",[_._v("用来指出TCP报文段的数据载荷部分的起始处距离TCP报文段的起始处有多远")])]),_._v(" "),s("blockquote",[s("p",[_._v("该字段实际上是指出了TCP报文段的首部长度")]),_._v(" "),s("p",[_._v("首部固定长度为20字节，因此数据偏移字段的最小值为(0101)")]),_._v(" "),s("p",[_._v("首部最大长度为60字节，因此数据偏移字段的最大值为(1111)")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("保留字段")]),_._v("：占6比特，置为 0，保留为今后使用")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("窗口")]),_._v("：占2字节，以字节为单位。"),s("strong",[_._v("指出发送本报文段的一方的接收窗口")])]),_._v(" "),s("blockquote",[s("p",[_._v("窗口值作为接收方让发送方设置其发送窗口的依据")]),_._v(" "),s("p",[_._v("这是以接收方的接收能力来控制发送方的发送能力，称为流量控制")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("校验和")]),_._v("：占16比特，检查范围包括TCP报文段的首部和数据载荷两部分")]),_._v(" "),s("blockquote",[s("p",[_._v("用来检查是否出现误码")]),_._v(" "),s("p",[_._v("在计算校验和时，要在TCP报文段的前面加上12字节的伪首部")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("选项字段")])]),_._v(" "),s("ul",[s("li",[_._v("最大报文长度MSS选项：TCP报文段数据载荷部分的最大长度")]),_._v(" "),s("li",[_._v("窗口扩大选项：为了扩大窗口(提高吞吐率)")]),_._v(" "),s("li",[_._v("时间戳选项：\n"),s("ul",[s("li",[_._v("用来计算往返时间RTT")]),_._v(" "),s("li",[_._v("用于处理序号超范围的情况，又称为防止序号绕回PAWS")])])]),_._v(" "),s("li",[_._v("选择确认选项")])])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("填充字段")]),_._v("：由于选项的长度可变，因此使用填充来"),s("strong",[_._v("确保报文段首部能被4整除")]),_._v("(数据偏移字段，也就是首部长度字段，是以4字节为单位的)")])])]),_._v(" "),s("h3",{attrs:{id:"_2-2-流量控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-流量控制"}},[_._v("#")]),_._v(" 2.2 流量控制")]),_._v(" "),s("blockquote",[s("p",[_._v("发送太快，而接收方的接收能力有限，这就会造成数据的丢失")]),_._v(" "),s("p",[_._v("所谓流量控制就是"),s("strong",[_._v("让发送方的发送速率不要太快，要让接收方来的及接收")])])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311124452275.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311124624091.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311124957595.png"}}),_._v(" "),s("h3",{attrs:{id:"_2-3-拥塞控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-拥塞控制"}},[_._v("#")]),_._v(" 2.3 拥塞控制")]),_._v(" "),s("blockquote",[s("p",[_._v("对网络中某一资源的需求超过了改资源所能提供的可用部分，网络性能就要变坏。这种情况就叫做拥塞。")]),_._v(" "),s("p",[_._v("若出现拥塞而不进行控制，整个网络的吞吐量将随输入负荷的增大而下降。")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311125921652.png"}}),_._v(" "),s("ul",[s("li",[s("strong",[_._v("拥塞窗口cwnd")]),_._v("，其值取决于网络的拥塞程度，并且动态变换\n"),s("ul",[s("li",[s("strong",[_._v("cwnd维护原则")]),_._v("：只要网络没有出现拥塞，拥塞窗口就再增大一些；但只要网络出现拥塞，拥塞窗口就减少一些。")]),_._v(" "),s("li",[_._v("判断出现"),s("strong",[_._v("网络拥塞的依据")]),_._v("：没有按时收到应到达的确认报文("),s("strong",[_._v("发生超时重传")]),_._v(")")])])]),_._v(" "),s("li",[_._v("发送方将拥塞窗口作为"),s("strong",[_._v("发送窗口swnd")]),_._v(", 即swnd = cwnd")]),_._v(" "),s("li",[_._v("维护一个慢开始门限的"),s("strong",[_._v("ssthresh")]),_._v("状态变量\n"),s("ul",[s("li",[_._v("当cwnd < ssthresh时，使用慢开始算法；")]),_._v(" "),s("li",[_._v("当cwnd > ssthresh时，停止使用慢开始算法而改用拥塞避免算法；")]),_._v(" "),s("li",[_._v("当cwnd = ssthresh时，既可以使用慢开始算法也可以使用拥塞避免算法。")])])])]),_._v(" "),s("p",[s("strong",[_._v("慢开始")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("cwnd = 1  swnd = cwnd ssthresh = 16")])]),_._v(" "),s("li",[s("p",[_._v("cwnd每次指数增加(*2)")])]),_._v(" "),s("li",[s("p",[_._v("当cwnd达到慢开始门限时，改用拥塞避免算法")]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311132440787.png"}})])]),_._v(" "),s("p",[s("strong",[_._v("拥塞避免")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("cwnd每次递增1")])]),_._v(" "),s("li",[s("p",[_._v("报文丢失，发送发使用超时重传")])]),_._v(" "),s("li",[s("p",[_._v("将ssthresh值更新为发生拥塞时cwnd值的一半")])]),_._v(" "),s("li",[s("p",[_._v("将cwnd值减少到1，并重新开始执行慢开始算法")])])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311132719368.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311132955192.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311133155549.png"}}),_._v(" "),s("p",[s("strong",[_._v("快重传")])]),_._v(" "),s("blockquote",[s("p",[_._v("所谓快重传，就是使发送方"),s("strong",[_._v("尽快进行重传，而不是等待超时重传计时器超时")]),_._v("再重传。")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311133633414.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311134013212.png"}}),_._v(" "),s("ul",[s("li",[s("p",[_._v("要求接收方不要等待自己发送数据时才进行捎带确认，而是要"),s("strong",[_._v("立即发送确认")])])]),_._v(" "),s("li",[s("p",[_._v("即使收到了失序的报文段也要立即发出对已收到的报文段的"),s("strong",[_._v("重复确认")])])]),_._v(" "),s("li",[s("p",[_._v("发送方一旦"),s("strong",[_._v("收到3个连续的重复确认")]),_._v(",就将响应的报文段"),s("strong",[_._v("立即重传")]),_._v("，而不是等待改报文段的超时重传计时器超时后再重传")])]),_._v(" "),s("li",[s("p",[_._v("对于个别丢失的报文段，发送方不会出现超时重传，也就不会误认为出现了拥塞。使用快重传可以使整个网络的吞吐量提高约20%")])])]),_._v(" "),s("p",[s("strong",[_._v("快恢复")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("发送方一旦"),s("strong",[_._v("收到3个重复确认")]),_._v("，就知道现在只是丢失了个别的报文段。于是不启动慢开始算法，而"),s("strong",[_._v("执行快恢复算法")])]),_._v(" "),s("ul",[s("li",[s("strong",[_._v("发送方将慢开始门限ssthresh值和拥塞窗口cwnd值调整为当前窗口的一半；开始执行拥塞避免算法")])]),_._v(" "),s("li",[_._v("也有的快恢复实现是把快恢复开始时的拥塞窗口cwnd值再增大一些，即等于新的ssthresh + 3\n"),s("ul",[s("li",[_._v("既然发送方收到3个重复的确认，就表明有3个数据报文段已经离开了网络")]),_._v(" "),s("li",[_._v("这3个报文段不再消耗网络资源而是停留在接受方的接收缓存中")]),_._v(" "),s("li",[_._v("可见现在网络中不是堆积了报文段而是减少了3个报文段。因此可以适当把拥塞窗口扩大些")])])])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311165859395.png"}})])]),_._v(" "),s("h3",{attrs:{id:"_2-4-超时重传时间的选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-超时重传时间的选择"}},[_._v("#")]),_._v(" 2.4 超时重传时间的选择")]),_._v(" "),s("ul",[s("li",[s("strong",[_._v("不能直接使用某次测量得到的RTT样本计算超时重传时间RTO")])]),_._v(" "),s("li",[_._v("利用每次测量得到的RTT样本，计算加权平均往返RTTs(又称为平滑的往返时间)")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311171521543.png"}}),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220311171644782.png"}}),_._v(" "),s("h3",{attrs:{id:"_2-5-tcp可靠传输的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-tcp可靠传输的实现"}},[_._v("#")]),_._v(" 2.5 TCP可靠传输的实现")]),_._v(" "),s("ul",[s("li",[_._v("TCP基于"),s("strong",[_._v("以字节为单位的滑动窗口")]),_._v("来实现可靠传输")])]),_._v(" "),s("h3",{attrs:{id:"_2-6-tcp的连接管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-tcp的连接管理"}},[_._v("#")]),_._v(" 2.6 TCP的连接管理")]),_._v(" "),s("ul",[s("li",[_._v("TCP是面向连接的协议，它基于运输连接来传送TCP报文段")]),_._v(" "),s("li",[_._v("TCP运输连接的建立和释放是每一次面向连接的通信中必不可少的过程")]),_._v(" "),s("li",[_._v("TCP运输连接有以下三个阶段：\n"),s("ul",[s("li",[s("strong",[_._v("建立连接")])]),_._v(" "),s("li",[s("strong",[_._v("数据传送")])]),_._v(" "),s("li",[s("strong",[_._v("释放TCP连接")])])])])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220323182137797.png"}}),_._v(" "),s("ul",[s("li",[_._v("TCP的连接管理就是使运输连接的建立和释放都能正常地运行")]),_._v(" "),s("li",[_._v("TCP的连接建立要解决以下三个问题：\n"),s("ul",[s("li",[_._v("使TCP双方能够确知对方的存在")]),_._v(" "),s("li",[_._v("使TCP双方能够协商一些参数 (如最大窗口值、是否使用窗口扩大选项和时间戳选项以及服务质量等)")]),_._v(" "),s("li",[_._v("使TCP双方能够对运输实体资源(如缓存大小、连接表中的项目等)进行分配")])])])]),_._v(" "),s("h2",{attrs:{id:"_3-三报文握手建立连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-三报文握手建立连接"}},[_._v("#")]),_._v(" 3. 三报文握手建立连接")]),_._v(" "),s("blockquote",[s("p",[_._v("确认通信双方的接收能力和发送能力是否正常并指定自己的初始化序列号(ISN)为后面的可靠传输做准备")])]),_._v(" "),s("ul",[s("li",[_._v("TCP客户端/服务器\n"),s("ul",[s("li",[_._v("TCP客户端："),s("strong",[_._v("主动")]),_._v("发起TCP连接的进程")]),_._v(" "),s("li",[_._v("TCP服务器："),s("strong",[_._v("被动等待")]),_._v("TCP连接建立的应用进程")])])]),_._v(" "),s("li",[_._v("TCP服务器进程首先会创建传输控制块(存储信息: TCP连接表、指向发送和接受缓存的指针、指向重传队列的指针、当前的发送和接受序号)")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:t(438),alt:"image-20220323191709842"}}),_._v(" "),s("p",[s("strong",[_._v("基本概念")])]),_._v(" "),s("ul",[s("li",[_._v("SYN：在TCP连接建立时用来同步序号")]),_._v(" "),s("li",[_._v("seq：发送的第一个字节的序号")]),_._v(" "),s("li",[_._v("ACK：确认报文段")]),_._v(" "),s("li",[_._v("ack：确认号，希望收到下一个数据的第一个字节的序号")]),_._v(" "),s("li",[_._v("刚开始客户端处于close状态，服务端处于listen状态")])]),_._v(" "),s("p",[s("strong",[_._v("第一次握手")])]),_._v(" "),s("p",[_._v("客户端向TCP服务进程发送TCP连接请求报文段，并进入"),s("strong",[_._v("同步已发送状态")]),_._v("，TCP连接请求报文段首部中的同部位SYN被设置为1，表明这是一个TCP连接请求报文段，序号字段seq被设置了一个初始值x，作为TCP客户进程所选择的初始序号。")]),_._v(" "),s("p",[s("em",[_._v("TCP规定SYN被设置为1的报文段不能携带数据，但要消耗一个序号")])]),_._v(" "),s("p",[s("strong",[_._v("第二次握手")])]),_._v(" "),s("p",[_._v("TCP服务进程收到TCP连接请求报文段后，如果同意建立连接，则向TCP客户进程发送TCP连接请求报文段，并进入"),s("strong",[_._v("同步已接收状态")]),_._v("，改报文段首部中的同部位SYN合确认位ACK都设置为1，表明这是一个TCP连接请求确认报文段，序号字段seq被设置了一个初始值y，作为TCP服务器进程所选择的初始序号，确认号字段ack的值被设置成了x+1，这是对TCP客户进程所选择的初始序号的确认。")]),_._v(" "),s("p",[s("strong",[_._v("第三次握手")])]),_._v(" "),s("p",[_._v("TCP客户进程收到TCP连接请求确认报文段后，还要向TCP服务器进程发送一个普通的TCP确认报文段，并进入"),s("strong",[_._v("连接已建立状态")]),_._v("，改报文段首部中的确认位ACK被设置为1，表明这是一个普通的TCP确认报文段，序号字段seq被设置为x+1，因为TCP客户进程发送的第一个TCP报文段的序号为x，并且不携带数据，因此第二个报文段的序号为x+1，确认号ack被设置为y+1，这是对TCP服务器进程所选择的初始序号的确认，TCP服务器进程收到该确认报文段后也进入"),s("strong",[_._v("连接已建立状态")]),_._v("。")]),_._v(" "),s("p",[s("em",[_._v("TCP规定普通的TCP确认报文段可以携带数据，不携带数据则不消耗序号")])]),_._v(" "),s("p",[s("strong",[_._v("为什么要使用三报文握手？")])]),_._v(" "),s("blockquote",[s("p",[_._v("三次握手最主要的目的就是通信双方确认自己与对方的发送和接受是正常的")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220604104016149.png"}}),_._v(" "),s("p",[_._v("举例：")]),_._v(" "),s("p",[_._v("客户端进程发出一个TCP连接请求报文段(上图红线所示)但该报文段在某些网络节点长时间滞留了。于是该报文段会超时重传，然后被服务器进程正常接收，然后服务器进程发送一个TCP连接请求确认报文段给客户端进程，此时若采用两报文握手则通信双方进入连接已建立状态，然后通过四报文挥手关闭连接。一段时间后滞留在网络中的报文段到达了服务器进程，此时服务器进程会发送一个TCP连接请求确认报文段给客户进程，以建立连接状态。而此时的客户端进程是处于关闭状态，这就白白浪费服务器资源。")]),_._v(" "),s("h2",{attrs:{id:"_4-四报文挥手建立连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-四报文挥手建立连接"}},[_._v("#")]),_._v(" 4. 四报文挥手建立连接")]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220604105718023.png"}}),_._v(" "),s("p",[s("strong",[_._v("基本概念")])]),_._v(" "),s("ul",[s("li",[_._v("FIN：连接终止位")]),_._v(" "),s("li",[_._v("seq：发送的第一个字节的序号")]),_._v(" "),s("li",[_._v("ACK：确认报文段")]),_._v(" "),s("li",[_._v("ack：确认号，希望收到下一个数据的第一个字节的序号")])]),_._v(" "),s("p",[s("strong",[_._v("第一次挥手")])]),_._v(" "),s("p",[_._v("TCP客户进程发送TCP连接释放报文段，并进入"),s("strong",[_._v("终止等待1状态")]),_._v("，该报文段首部中的终止位FIN和确认位ACK的值都被设置为1，表明这是一个TCP连接释放报文段，同时也对之前收到的报文段进行确认，序号seq字段的值设置为u(等于客户进程之前已传送过的数据最后一个字节序号+1)，确认号ack的字段值设置为v(等于客户进程之前已传送过的数据最后一个字节序号+1)。")]),_._v(" "),s("p",[s("em",[_._v("TCP规定终止位FIN等于1的报文段即使不携带数据，也要消耗一个序号")])]),_._v(" "),s("p",[s("strong",[_._v("第二次挥手")])]),_._v(" "),s("p",[_._v("TCP服务器进程收到TCP连接释放报文段后会发送一个普通的TCP确认报文段并进入关闭等待状态，并进入"),s("strong",[_._v("关闭等待状态")]),_._v("，改报文段首部中的确认位ACK的值被设置为1，表明这是一个普通的TCP确认报文段，序号seq字段的值设置为v(等于TCP服务器进程之前已传送过的数据的最后一个字节的序号+1 = ack)，确认号ack的字段值设置为u+1(这是对TCP连接释放报文段的确认)，此时从TCP客户进程到TCP服务进程这个方向的连接就释放了，这是的TCP连接属于"),s("strong",[_._v("半关闭状态")]),_._v("。客户进程收到TCP确认报文段后就进入"),s("strong",[_._v("终止等待2状态")]),_._v("(等待TCP服务进程发出的TCP连接释放报文段)。")]),_._v(" "),s("p",[s("strong",[_._v("第三次挥手")])]),_._v(" "),s("p",[_._v("服务器进程发送TCP连接释放报文段并进入"),s("strong",[_._v("最后确认状态")]),_._v("，该报文段首部中的终止位FIN和确认位ACK的值都被设置为1，表明这是一个TCP连接释放报文段，序列号seq字段被设置为w，确认号ack的字段的值为u+1(对之前收到的TCP连接释放报文段的重复确认)。")]),_._v(" "),s("p",[s("strong",[_._v("第四次挥手")])]),_._v(" "),s("p",[_._v("客户进程收到TCP连接释放报文段后，必须针对该报文段发送普通的TCP确认报文段，之后进入"),s("strong",[_._v("时间等待状态")]),_._v("，该报文段首部中的确认位ACK的值被设置为1，表明这是一个普通的TCP确认报文段，序号seq字段的值设置为u+1，确认号ack字段的值设置为w+1(对所收到的TCP连接释放报文段的确认)，TCP服务器进程收到该报文段后就进入"),s("strong",[_._v("关闭状态状态")]),_._v("，而TCP客户进程还要进过2MSL(2*2=4min)后才能进入关闭状态。")]),_._v(" "),s("p",[s("strong",[_._v("为什么要四次挥手")])]),_._v(" "),s("blockquote",[s("p",[_._v("两次握手就可以释放一端到另一端的 TCP 连接，完全释放连接一共需要四次握手")])]),_._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://mynotes-1252832980.cos.ap-shanghai.myqcloud.com/image-20220604114420332.png"}}),_._v(" "),s("p",[_._v("举例：")]),_._v(" "),s("p",[_._v("TCP服务器进程发送TCP连接释放报文段后进入"),s("strong",[_._v("最后确认状态")]),_._v("，TCP客户端进程收到该报文段后，发送普通的TCP确认报文段，并进入"),s("strong",[_._v("关闭状态")]),_._v("而不是"),s("strong",[_._v("时间等待状态")]),_._v("，然后，该TCP确认报文段丢失了，这必然造成TCP服务器进程对之前所发送的TCP连接释放报文段的超时重传，仍处于"),s("strong",[_._v("最后确认状态")]),_._v("，由于客户端进程处于关闭状态并不会理睬该报文段。会造成服务器端进程反复重传TCP连接释放报文段，并一直处于"),s("strong",[_._v("最后确认状态")]),_._v("而无法处于"),s("strong",[_._v("关闭状态")]),_._v("。")])])}),[],!1,null,null,null);v.default=o.exports}}]);
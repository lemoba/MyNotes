(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{508:function(t,s,a){"use strict";a.r(s);var _=a(11),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"简单动态字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单动态字符串"}},[t._v("#")]),t._v(" 简单动态字符串")]),t._v(" "),a("blockquote",[a("p",[t._v("Redis没有直接使用C语言的字符串表示，而是构建了一套简单动态字符串(SDS)的抽象类型，并将SDS用作Redis的默认字符串表示")])]),t._v(" "),a("p",[t._v("用途:")]),t._v(" "),a("ul",[a("li",[t._v("保存数据库中的字符串值(键或者字符串类型的值)")]),t._v(" "),a("li",[t._v("AOF中的缓冲区以及客户端状态中的输入缓冲区")])]),t._v(" "),a("h2",{attrs:{id:"_1-sds的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-sds的定义"}},[t._v("#")]),t._v(" 1. SDS的定义")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sdshdr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// buf 中已占用空间的长度(字符串的长度)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" free"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// buf 中剩余可用空间的长度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据空间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[t._v("SDS遵循C字符串以空字符结尾(保存字符的1字节空间，不计算在SDS的len属性里面)；")]),t._v(" "),a("li",[t._v("为空字串分配1字节额外空间以及添加空字符到字符串末尾等操作都是由SDS函数自动完成的，对使用者完全透明；")]),t._v(" "),a("li",[a("strong",[t._v("直接重用一部分C字符串函数库里面的函数")]),t._v("（如printf等）。")])]),t._v(" "),a("h2",{attrs:{id:"_2-与c字符串的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-与c字符串的区别"}},[t._v("#")]),t._v(" 2. 与C字符串的区别")]),t._v(" "),a("blockquote",[a("p",[t._v("Clang使用长度为N+1的字符数组来表示长度为N的字符串，并且字符数组末尾总是空字符'\\0'")])]),t._v(" "),a("h3",{attrs:{id:"_2-1-常数复杂度获取字符串长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-常数复杂度获取字符串长度"}},[t._v("#")]),t._v(" 2.1 常数复杂度获取字符串长度")]),t._v(" "),a("p",[t._v("c字符串获取长度需要O(n)时间，而SDS通过len可以直接获取。从O(n)降到了O(1)确保了获取字符串长度不会成为Redis的性能瓶颈。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-杜绝缓冲区溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-杜绝缓冲区溢出"}},[t._v("#")]),t._v(" 2.2 杜绝缓冲区溢出")]),t._v(" "),a("ul",[a("li",[t._v("C字符串不记录自身长度容易造成缓冲区溢出，如当使用strcat(char *dest, cont char *src)函数时，如果没有为dest分配足够多的内存(容纳不下src)就会发生缓冲区溢出；")]),t._v(" "),a("li",[t._v("SDS的分配策略完全杜绝了发生缓冲区溢出的可能，当要修改SDS时，首先会检测SDS空间是否满足当前修改，不满足则自动扩容，然后执行操作。")])]),t._v(" "),a("h3",{attrs:{id:"_2-3-减少修改字符串时带来的内存重分配次数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-减少修改字符串时带来的内存重分配次数"}},[t._v("#")]),t._v(" 2.3 减少修改字符串时带来的内存重分配次数")]),t._v(" "),a("p",[a("strong",[t._v("C字符串")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("对于长度为N的C字符串来说，底层总是实现一个N+1长度的数组。因为C字符串的长度要和底层数组的长度之间存在着这种关联性，所以每次增长或缩短，都会进行以此内存重新分配；\n"),a("ul",[a("li",[t._v("增长字符串：如拼接操作(append)，首先需要重新扩展底层数组空间的大小，如果忽略这一步就会造成"),a("strong",[t._v("缓冲区溢出")])]),t._v(" "),a("li",[t._v("缩短字符串：如截断操作(trim)，需要通过内存重分配来释放不使用的字符串，如果忽略这一步就会造成"),a("strong",[t._v("内存泄露")])])])]),t._v(" "),a("li",[t._v("内存重分配涉及复杂的算法，可能需要执行系统调用，比较耗时。")])]),t._v(" "),a("p",[a("strong",[t._v("SDS")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("空间预分配")]),t._v("：当对字符串增长时，程序不仅会为SDS分配修改必要的空间，还会为SDS分配额外的未使用空间；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果SDS长度 < 1MB，那么程序会分配和len属性同样大小的未使用空间")])]),t._v(" "),a("li",[a("p",[t._v("如果SDS长度 > 1MB，那么程序会分配30MB的空间")])]),t._v(" "),a("li",[a("p",[t._v("通过空间预分配，Redis可以减少连续执行字符串增长操作所需要的内存分配次数")])]),t._v(" "),a("li",[a("p",[t._v("通过这种预分配策略，SDS将连续增长N次字符串所需的内存重新分配次数从必定N次降为最多N次")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("惰性空间释放")]),t._v("：当需要缩短SDS保存的字符串时，程序并不立即使用内存重新分配来回收缩短后多出来的字节，而是使用free属性将这些字节记录起来，以供将来使用。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-4-二进制安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-二进制安全"}},[t._v("#")]),t._v(" 2.4 二进制安全")]),t._v(" "),a("ul",[a("li",[t._v("C字符串只能保存文本数据，不能保存图片，音频，视频，压缩文件这些二进制数据；")]),t._v(" "),a("li",[t._v("SDS由于是二进制安全，不仅可以保存文本数据，还能保存任意格式的二进制数据。")])]),t._v(" "),a("h3",{attrs:{id:"_2-5-兼容部分c字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-兼容部分c字符串函数"}},[t._v("#")]),t._v(" 2.5 兼容部分C字符串函数")]),t._v(" "),a("p",[t._v("可以使用Clang的<string.h>库，从而避免了不必要的代码重复。")]),t._v(" "),a("h2",{attrs:{id:"_3-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-总结"}},[t._v("#")]),t._v(" 3. 总结")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("C字符串")]),t._v(" "),a("th",[t._v("SDS")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("获取字符串长度的复杂度为0(N)")]),t._v(" "),a("td",[t._v("获取字符串长度的复杂度为0(1)")])]),t._v(" "),a("tr",[a("td",[t._v("API是二进制不安全的，可能会造成缓冲区溢出")]),t._v(" "),a("td",[t._v("API是二进制安全的，不会造成缓冲区溢出")])]),t._v(" "),a("tr",[a("td",[t._v("修改字符串长度N次必然需要执行N次内存分配")]),t._v(" "),a("td",[t._v("修改字符串长度N次最多执行N次内存分配")])]),t._v(" "),a("tr",[a("td",[t._v("只能保存文本数据")]),t._v(" "),a("td",[t._v("不仅能保存文本数据还能保存任意的二进制数据")])]),t._v(" "),a("tr",[a("td",[t._v("可以使用<string.h>库中的函数")]),t._v(" "),a("td",[t._v("可以部分使用<string.h>库中的函数")])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);